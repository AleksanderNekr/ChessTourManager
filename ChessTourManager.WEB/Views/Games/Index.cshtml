@using ChessTourManager.DataAccess.Entities
@model IEnumerable<ChessTourManager.DataAccess.Entities.Game>

@{
    ViewData["Title"] = "Games";
    Tournament tournament = ViewBag.Tournament;
    List<SelectListItem> tourNumbers = ViewBag.TourNumbers;
    int selectedTour = ViewBag.SelectedTour;
}

<partial name="_TournamentPartial" model="tournament"/>
@if (Model.Count() == 0)
{
    <h3>No games for this tournament</h3>
}
else
{
    <h3>
        <form asp-action="Index" asp-route-id="@tournament.Id" asp-route-selectedTour="@selectedTour">
            Games for @Html.DropDownList(nameof(selectedTour),
                                         tourNumbers,
                                         new
                                         {
                                             @class = "form-control w-auto",
                                             style = "display: inline-block; font-size: 1.5rem; font-weight: bold;",
                                             onchange = "this.form.submit()"
                                         })
            of @tournament.ToursCount total
        </form>
    </h3>
}
<hr/>
<p style="display: inline-block; margin-right: 1em;">
    <a asp-action="Create" class="btn btn-primary">Start New Tour</a>
</p>
@if (Model.Count() != 0)
{
    <partial name="_ExportPartial"/>
    <table id="table" class="table table-hover">
        <thead>
        <tr>
            <th/>
            <th class="align-middle">
                @Html.DisplayNameFor(model => model.PlayerWhite)
            </th>
            <th class="align-middle">
                @Html.DisplayNameFor(model => model.PlayerWhite.PointsAmount)
            </th>
            <th class="align-middle">
                @Html.DisplayNameFor(model => model.Result)
            </th>
            <th class="align-middle">
                @Html.DisplayNameFor(model => model.PlayerBlack)
            </th>
            <th class="align-middle">
                @Html.DisplayNameFor(model => model.PlayerBlack.PointsAmount)
            </th>
            <th class="align-middle">
                @Html.DisplayNameFor(model => model.IsPlayed)
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (Game item in Model)
        {
            <tr>
                <td class="align-middle">
                    @(Model.ToList().IndexOf(item) + 1)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.PlayerWhite.PlayerFullName)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.PlayerWhite.PointsAmount)
                </td>
                <td class="align-middle">
                    <form asp-action="Edit"
                          asp-route-whiteId="@item.PlayerWhite.Id"
                          asp-route-blackId="@item.PlayerBlack.Id"
                          asp-route-result="@item.Result">
                        @Html.DropDownList(nameof(item.Result),
                                              new List<SelectListItem>
                                              {
                                                  new() { Text = "1 – 0", Value = "1 – 0", Selected = item.Result == "1 – 0" },
                                                  new() { Text = "0 – 1", Value = "0 – 1", Selected = item.Result == "0 – 1" },
                                                  new() { Text = "0.5 – 0.5", Value = "0.5 – 0.5", Selected = item.Result == "0.5 – 0.5" },
                                                  new() { Text = "+ – -", Value = "+ – -", Selected = item.Result == "+ – -" },
                                                  new() { Text = "- – +", Value = "- – +", Selected = item.Result == "- – +" },
                                                  new() { Text = "0 – 0", Value = "0 – 0", Selected = item.Result == "0 – 0" },
                                                  new() { Text = "–", Value = "–", Selected = item.Result == "–" }
                                              },
                                           new
                                              {
                                                  @class = "form-control",
                                                  onchange = "this.form.submit()"
                                              })
                    </form>
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.PlayerBlack.PlayerFullName)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.PlayerBlack.PointsAmount)
                </td>
                <td class="align-middle">
                    @Html.DisplayFor(modelItem => item.IsPlayed)
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <h4>Press <b>`Start New Tour`</b> button to start the draw for the first round</h4>
}


<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css" />
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>
<script>
    $(document).ready( function () {
        $('#table').DataTable({
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            "order": [],
            // disable sorting for all columns
            "columnDefs": [
                { "orderable": false, "targets": "_all" }
            ]
        });
    } );
</script>
