<p style="display: inline-block;">
    <button onclick="DownloadToExcel()" class="btn btn-primary">Download to Excel</button>
    <button onclick="Print()" class="btn btn-primary">Print</button>
</p>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>

<script>

function Print() {
  var table = document.getElementById("table");
  var printWindow = window.open('');
  printWindow.document.write('<html><head><title>Print</title>');
  printWindow.document.write('</head><body >');

  var rows = table.rows;
  var ignoredColumns = [];

  for (var i = 0; i < rows.length; i++) {
    var cells = rows[i].querySelectorAll('th, td');
    for (var j = 0; j < cells.length; j++) {
      var cell = cells[j];
      if (cell.classList.contains('action-buttons')) {
        ignoredColumns.push(j);
        break; // Skip to the next row
      }
    }
  }

  var clonedTable = table.cloneNode(true);

  for (var i = 0; i < clonedTable.rows.length; i++) {
    var cells = clonedTable.rows[i].querySelectorAll('th, td');
    for (var j = cells.length - 1; j >= 0; j--) {
      if (ignoredColumns.includes(j)) {
        cells[j].remove();
      }
    }
  }

  printWindow.document.write(clonedTable.outerHTML);
  printWindow.document.write('</body></html>' +
    '<style type="text/css">' +
    'table th, table td {' +
    'border-bottom: 1px solid #000;' +
    'border-right: 1px solid #000;' +
    '}' +
    '</style>');
  printWindow.document.close();

  printWindow.onafterprint = function () {
    printWindow.close();
  };

  printWindow.print();
}


function DownloadToExcel() {
  var table = $("#table");
  var headerCells = table.find("th");
  var headers = [];
  var columnIndexMap = {};

  headerCells.each(function (index) {
    var headerText = $(this).text().trim();
    if (headerText !== "") {
      headers.push(headerText);
      columnIndexMap[index] = headers.length - 1;
    }
  });

  var rows = table.find("tbody tr");
  var data = [];

  rows.each(function () {
    var rowData = [];
    var cells = $(this).find("td");

    cells.each(function (index) {
      var columnIndex = columnIndexMap[index];
      if (columnIndex !== undefined) {
        var cellContent = "";
        if ($(this).find("select").length > 0) {
          cellContent = $(this).find("select").val();
        } else {
          cellContent = $(this).text().trim();
        }
        rowData[columnIndex] = cellContent;
      }
    });

    if (rowData.length > 0) {
      data.push(rowData);
    }
  });

  var worksheet = XLSX.utils.aoa_to_sheet([headers].concat(data));
  var workbook = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
  var excelBuffer = XLSX.write(workbook, {
    bookType: "xlsx",
    type: "array",
    cellDates: true,
  });
  var blob = new Blob([excelBuffer], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });

  var link = document.createElement("a");
  link.href = URL.createObjectURL(blob);
  link.download = "table.xlsx";
  link.click();
}

</script>
