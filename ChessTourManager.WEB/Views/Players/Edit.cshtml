@using ChessTourManager.DataAccess.Entities
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ChessTourManager.DataAccess.Entities.Player

@{
    ViewData["Title"] = "Edit player";
    var tournament = (Tournament)ViewBag.Tournament;
    List<SelectListItem>? teams = (List<SelectListItem>)ViewBag.Teams;
    List<SelectListItem>? groups = (List<SelectListItem>)ViewBag.Groups;
}

<h1>Edit player: @Model.PlayerFullName</h1>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id"/>
            <input type="hidden" asp-for="TournamentId"/>
            <input type="hidden" asp-for="OrganizerId"/>
            <input type="hidden" asp-for="LossesCount"/>
            <input type="hidden" asp-for="WinsCount"/>
            <input type="hidden" asp-for="DrawsCount"/>
            <input type="hidden" asp-for="PointsAmount"/>
            <div class="form-group">
                <label asp-for="PlayerLastName" class="control-label"></label>
                <input asp-for="PlayerLastName" class="form-control"/>
                <span asp-validation-for="PlayerLastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlayerFirstName" class="control-label"></label>
                <input asp-for="PlayerFirstName" class="form-control"/>
                <span asp-validation-for="PlayerFirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <select asp-for="Gender" class="form-control">
                    <option value="M">Male</option>
                    <option value="F">Female</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlayerAttribute" class="control-label"></label>
                <input asp-for="PlayerAttribute" class="form-control"/>
                <span asp-validation-for="PlayerAttribute" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PlayerBirthYear" class="control-label"></label>
                <input asp-for="PlayerBirthYear" class="form-control"/>
                <span asp-validation-for="PlayerBirthYear" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IsActive" class="control-label"></label>
                <select asp-for="IsActive" class="form-control">
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
                <span asp-validation-for="IsActive" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BoardNumber" class="control-label"></label>
                <input asp-for="BoardNumber" class="form-control"/>
                <span asp-validation-for="BoardNumber" class="text-danger"></span>
            </div>
            @if (tournament.KindId != 1)
            {
                <div class="form-group">
                    <label for="@nameof(Player.TeamId)">Team</label>
                    @Html.DropDownList(nameof(Player.TeamId),
                                       teams,
                                       "-- Select Team --",
                                       new { @class = "form-control" })
                    <span asp-validation-for="TeamId" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label for="@nameof(Player.GroupId)">Group</label>
                @Html.DropDownList(nameof(Player.GroupId),
                                   groups,
                                   "-- Select Group --",
                                   new { @class = "form-control" })
                <span asp-validation-for="GroupId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary m-2"/>
            </div>
        </form>
    </div>
</div>
<hr/>
<div>
    <a asp-action="Index" asp-route-id="@tournament.Id" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
